[{"/Users/mymac/Documents/Projects/no-filter/src/index.tsx":"1","/Users/mymac/Documents/Projects/no-filter/src/reportWebVitals.ts":"2","/Users/mymac/Documents/Projects/no-filter/src/AppContext.tsx":"3","/Users/mymac/Documents/Projects/no-filter/src/App.tsx":"4","/Users/mymac/Documents/Projects/no-filter/src/theme.ts":"5","/Users/mymac/Documents/Projects/no-filter/src/components/common/AppHeader.tsx":"6","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/_index.js":"7","/Users/mymac/Documents/Projects/no-filter/src/components/common/TabPanel.tsx":"8","/Users/mymac/Documents/Projects/no-filter/src/components/instagram/UserProfile.tsx":"9","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/ice-cream.js":"10","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/flowers4.js":"11","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/airplane.js":"12","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/beach-view.js":"13","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/routine.js":"14","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/central-park.js":"15","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/holiday-house.js":"16","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/green-bubble.js":"17","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/lake-view.js":"18","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/wynn.js":"19","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/stage.js":"20","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/gucci.js":"21","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/bridge-bird.js":"22","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/scenic.js":"23","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/shoes.js":"24","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/full-cup.js":"25","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/smoke.js":"26","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/view.js":"27","/Users/mymac/Documents/Projects/no-filter/src/components/instagram/GridLayout.tsx":"28","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/flowers3.js":"29","/Users/mymac/Documents/Projects/no-filter/src/defaults.ts":"30","/Users/mymac/Documents/Projects/no-filter/src/components/icons/HeartIcon.tsx":"31","/Users/mymac/Documents/Projects/no-filter/src/components/icons/CommentIcon.tsx":"32","/Users/mymac/Documents/Projects/no-filter/src/components/icons/ShareIcon.tsx":"33","/Users/mymac/Documents/Projects/no-filter/src/components/icons/BookmarkIcon.tsx":"34","/Users/mymac/Documents/Projects/no-filter/src/components/instagram/post/IconBar.tsx":"35","/Users/mymac/Documents/Projects/no-filter/src/components/instagram/views/PostsView.tsx":"36","/Users/mymac/Documents/Projects/no-filter/src/components/instagram/views/FeedView.tsx":"37","/Users/mymac/Documents/Projects/no-filter/src/util/posts.ts":"38","/Users/mymac/Documents/Projects/no-filter/src/components/instagram/post/CommentInput.tsx":"39","/Users/mymac/Documents/Projects/no-filter/src/components/instagram/post/PostCard.tsx":"40","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/starbucks.js":"41","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/sunglasses.js":"42","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/life.js":"43","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/bridge.js":"44","/Users/mymac/Documents/Projects/no-filter/src/pages/GalleryPage.tsx":"45","/Users/mymac/Documents/Projects/no-filter/src/pages/InstagramPage.tsx":"46","/Users/mymac/Documents/Projects/no-filter/src/pages/GalleryPost.tsx":"47","/Users/mymac/Documents/Projects/no-filter/src/pages/InstagramPost.tsx":"48","/Users/mymac/Documents/Projects/no-filter/src/components/common/ScrollTop.tsx":"49","/Users/mymac/Documents/Projects/no-filter/src/components/instagram/post/ImageCarousel.tsx":"50","/Users/mymac/Documents/Projects/no-filter/src/components/icons/MenuIcon.tsx":"51","/Users/mymac/Documents/Projects/no-filter/src/components/icons/GridIcon.tsx":"52","/Users/mymac/Documents/Projects/no-filter/src/components/instagram/post/ModalPostCard.tsx":"53","/Users/mymac/Documents/Projects/no-filter/src/components/icons/CloseIcon.tsx":"54","/Users/mymac/Documents/Projects/no-filter/src/components/gallery/LabelsView.tsx":"55","/Users/mymac/Documents/Projects/no-filter/src/components/gallery/ObjectsView.tsx":"56","/Users/mymac/Documents/Projects/no-filter/src/components/common/MobileBottomNav.tsx":"57","/Users/mymac/Documents/Projects/no-filter/src/components/instagram/views/MobilePostView.tsx":"58","/Users/mymac/Documents/Projects/no-filter/src/components/gallery/MobilePhotoView.tsx":"59"},{"size":1199,"mtime":1610969602417,"results":"60","hashOfConfig":"61"},{"size":425,"mtime":1609458305862,"results":"62","hashOfConfig":"61"},{"size":1224,"mtime":1610905876463,"results":"63","hashOfConfig":"61"},{"size":1833,"mtime":1610996546351,"results":"64","hashOfConfig":"61"},{"size":763,"mtime":1610994829726,"results":"65","hashOfConfig":"61"},{"size":3454,"mtime":1610997034561,"results":"66","hashOfConfig":"61"},{"size":1250,"mtime":1610772237840,"results":"67","hashOfConfig":"61"},{"size":457,"mtime":1609487223303,"results":"68","hashOfConfig":"61"},{"size":5780,"mtime":1610999202873,"results":"69","hashOfConfig":"61"},{"size":35736,"mtime":1610773619463,"results":"70","hashOfConfig":"61"},{"size":10301,"mtime":1610773571183,"results":"71","hashOfConfig":"61"},{"size":78769,"mtime":1610773522104,"results":"72","hashOfConfig":"61"},{"size":11101,"mtime":1610773532799,"results":"73","hashOfConfig":"61"},{"size":74119,"mtime":1610773638487,"results":"74","hashOfConfig":"61"},{"size":46828,"mtime":1610773554871,"results":"75","hashOfConfig":"61"},{"size":42588,"mtime":1610773609455,"results":"76","hashOfConfig":"61"},{"size":50550,"mtime":1610774032891,"results":"77","hashOfConfig":"61"},{"size":12697,"mtime":1610773626375,"results":"78","hashOfConfig":"61"},{"size":28116,"mtime":1610773689488,"results":"79","hashOfConfig":"61"},{"size":36481,"mtime":1610773664279,"results":"80","hashOfConfig":"61"},{"size":354562,"mtime":1610773603040,"results":"81","hashOfConfig":"61"},{"size":11570,"mtime":1610773539528,"results":"82","hashOfConfig":"61"},{"size":8123,"mtime":1610773645407,"results":"83","hashOfConfig":"61"},{"size":24042,"mtime":1610773650887,"results":"84","hashOfConfig":"61"},{"size":19294,"mtime":1610773588225,"results":"85","hashOfConfig":"61"},{"size":16183,"mtime":1610773658071,"results":"86","hashOfConfig":"61"},{"size":18381,"mtime":1610773684423,"results":"87","hashOfConfig":"61"},{"size":2056,"mtime":1610996647972,"results":"88","hashOfConfig":"61"},{"size":14383,"mtime":1610773140486,"results":"89","hashOfConfig":"61"},{"size":535,"mtime":1610905685749,"results":"90","hashOfConfig":"61"},{"size":791,"mtime":1610294037063,"results":"91","hashOfConfig":"61"},{"size":658,"mtime":1610294051542,"results":"92","hashOfConfig":"61"},{"size":403,"mtime":1610294004920,"results":"93","hashOfConfig":"61"},{"size":419,"mtime":1610294071761,"results":"94","hashOfConfig":"61"},{"size":701,"mtime":1610871380818,"results":"95","hashOfConfig":"61"},{"size":448,"mtime":1610996670417,"results":"96","hashOfConfig":"61"},{"size":1288,"mtime":1610972959139,"results":"97","hashOfConfig":"61"},{"size":571,"mtime":1610996553916,"results":"98","hashOfConfig":"61"},{"size":1130,"mtime":1610878755203,"results":"99","hashOfConfig":"61"},{"size":4085,"mtime":1610988372294,"results":"100","hashOfConfig":"61"},{"size":28913,"mtime":1610773671839,"results":"101","hashOfConfig":"61"},{"size":29406,"mtime":1610773678091,"results":"102","hashOfConfig":"61"},{"size":381228,"mtime":1610773631200,"results":"103","hashOfConfig":"61"},{"size":119382,"mtime":1610773550318,"results":"104","hashOfConfig":"61"},{"size":3020,"mtime":1610996616611,"results":"105","hashOfConfig":"61"},{"size":3697,"mtime":1610994860987,"results":"106","hashOfConfig":"61"},{"size":9042,"mtime":1610996590559,"results":"107","hashOfConfig":"61"},{"size":4671,"mtime":1610996571795,"results":"108","hashOfConfig":"61"},{"size":1540,"mtime":1610231135186,"results":"109","hashOfConfig":"110"},{"size":3331,"mtime":1610871361425,"results":"111","hashOfConfig":"61"},{"size":561,"mtime":1610294021862,"results":"112","hashOfConfig":"61"},{"size":539,"mtime":1610295077700,"results":"113","hashOfConfig":"61"},{"size":5227,"mtime":1610995894303,"results":"114","hashOfConfig":"61"},{"size":515,"mtime":1610407634023,"results":"115","hashOfConfig":"61"},{"size":1273,"mtime":1610993564342,"results":"116","hashOfConfig":"61"},{"size":1111,"mtime":1610996729579,"results":"117","hashOfConfig":"61"},{"size":1372,"mtime":1610971673126,"results":"118","hashOfConfig":"61"},{"size":800,"mtime":1610996690515,"results":"119","hashOfConfig":"61"},{"size":4162,"mtime":1610996743514,"results":"120","hashOfConfig":"61"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},"1bi6lkr",{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"123"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"123"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"123"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"123"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"123"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"123"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"123"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"123"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"123"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"123"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"233"},"1m7drz9",{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"123"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"123"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"123"},"/Users/mymac/Documents/Projects/no-filter/src/index.tsx",[],["257","258"],"/Users/mymac/Documents/Projects/no-filter/src/reportWebVitals.ts",[],"/Users/mymac/Documents/Projects/no-filter/src/AppContext.tsx",[],"/Users/mymac/Documents/Projects/no-filter/src/App.tsx",["259","260","261"],"import React from 'react';\nimport {Switch, Route, useLocation} from 'react-router-dom';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Fab from '@material-ui/core/Fab';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nimport AppHeader from './components/common/AppHeader';\nimport GalleryPage from './pages/GalleryPage';\nimport InstagramPage from './pages/InstagramPage';\nimport GalleryPost from './pages/GalleryPost';\nimport InstagramPost from './pages/InstagramPost';\nimport ScrollTop from './components/common/ScrollTop';\nimport MobileBottomNav from './components/common/MobileBottomNav';\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nfunction App() {\n  const theme = useTheme();\n  const location = useLocation();\n  const mobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const modalBackground = !mobile && location.state && location.state['modalBackground'];\n \n  return (\n    <div>\n      <AppHeader/>\n      <Switch location={modalBackground || location}>\n        <Route path=\"/\" exact>\n          <GalleryPage/>\n        </Route>\n        <Route path=\"/gallery/:id\">\n          <GalleryPost/>\n        </Route>\n        <Route path=\"/instagram\" exact>\n          <InstagramPage/>\n        </Route>\n        <Route path=\"/instagram/:id\">\n          <InstagramPost/>\n        </Route>\n      </Switch>\n      {modalBackground && <Route path=\"/instagram/:id\" children={<InstagramPost/>} />}\n      {modalBackground && <Route path=\"/gallery/:id\" children={<GalleryPost/>} />}\n\n      {/* <ScrollTop>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop> */}\n      {mobile && <MobileBottomNav/>}\n    </div>  \n  );\n}\n\nexport default App;\n","/Users/mymac/Documents/Projects/no-filter/src/theme.ts",[],"/Users/mymac/Documents/Projects/no-filter/src/components/common/AppHeader.tsx",["262"],"import React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport CameraEnhanceIcon from '@material-ui/icons/CameraEnhance';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  contain: {\n    width: '935px',\n    margin: '0 auto',\n    [theme.breakpoints.down('sm')]: {\n      width: '90%',\n    },\n  },\n  titleContainer: {\n    display: 'flex'\n  },\n  title: {\n    fontFamily: \"'Bebas Neue', cursive\",\n    padding: '11px 0 0 10px',\n    fontSize: '24px',\n    cursor: 'pointer',\n    userSelect: 'none',\n    letterSpacing: '0.5px'\n  },\n  link: {\n    marginRight: theme.spacing(2),\n    marginLeft: theme.spacing(2),\n  },\n  white: {\n    color: '#fff'\n  },\n  logoIcon: {\n    fontSize:'24px',\n    marginTop: '12px',\n    cursor: \"pointer\"\n  },\n  githubIcon: {\n    padding: '12px 0 0 0'\n  },\n  indicator: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \"& > span\": {\n      maxWidth: \"100px\",\n      width: \"100%\",\n      backgroundColor: \"#ee0d0d\"\n    }\n  }\n}));\n\nexport default function AppHeader() {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const theme = useTheme();\n  const mobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const [value, setValue] = useState(location.pathname.includes('instagram') ? '/instagram' : '/');\n\n  useEffect(() => {\n    if (location.pathname) {\n      setValue(location.pathname.includes('instagram') ? '/instagram' : '/')\n    }\n  }, [location.pathname]);\n\n  const handleChange = (event, value) => {\n    setValue(value);\n    history.push(value);\n  }\n\n  return (\n    <AppBar position=\"fixed\">\n      <div className={classes.contain}>\n        <div className={classes.root}>\n        \n          <div className={classes.titleContainer} onClick={() => history.push(\"/\")}>\n            <CameraEnhanceIcon className={classes.logoIcon}/>\n            <Typography variant=\"h4\"className={classes.title}>\n              No Filter\n            </Typography>\n          </div>\n          {!mobile && (\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              indicatorColor=\"secondary\"\n              TabIndicatorProps={{ children: <span /> }}\n              centered\n              classes={{ indicator: classes.indicator}}\n            >\n              <Tab label=\"Gallery\" value=\"/\"/>\n              <Tab label=\"Instagram\" value=\"/instagram\"/>\n            </Tabs>\n          )}\n\n          <div>\n            <Tooltip title=\"Github\">\n              <IconButton className={classes.githubIcon}>\n                <a\n                  href=\"https://github.com/brucean52/photo-gallery\"\n                  target=\"_blank\"\n                >\n                  <GitHubIcon className={classes.white}/>\n                </a>\n              </IconButton>\n            </Tooltip>\n          </div>\n\n        </div>\n      </div>\n    </AppBar>\n  );\n}\n","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/_index.js",[],["263","264"],"/Users/mymac/Documents/Projects/no-filter/src/components/common/TabPanel.tsx",[],"/Users/mymac/Documents/Projects/no-filter/src/components/instagram/UserProfile.tsx",["265"],"import React, { useContext } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport PersonIcon from '@material-ui/icons/Person';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nimport { AppContext } from '../../AppContext';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    margin: '16px 16px 44px 16px'\n  },\n  metaContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginBottom: '20px',\n    padding: '0',\n    '& > li': {\n      listStyle: 'none',\n      marginRight: '40px',\n      fontSize: '16px'\n    },\n    [theme.breakpoints.down('sm')]: {\n      justifyContent: 'flex-start',\n      marginRight: '6px',\n      gap: '50px'\n    },\n  },\n  header: {\n    display: 'flex',\n    marginBottom: '20px'\n  },\n  imageContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    width: '35%',\n    textAlign: 'center'\n  },\n  image: {\n    borderRadius: '50%',\n    width: '150px',\n\n    [theme.breakpoints.down('xs')]: {\n      width: '100px',\n      height: '100px'\n    }\n  },\n  textContainer: {\n    width: '65%',\n  },\n  tabIcon: {\n    marginTop: '7px',\n    fontSize: '14px'\n  },\n  button: {\n    textTransform: 'capitalize',\n    fontWeight: 600,\n    letterSpace: 'normal',\n    padding: '2px 9px'\n  },\n  buttonIcons: {\n    fontSize: '18px',\n  },\n  buttonCheckIcon: {\n    fontSize: '12px'\n  },\n  buttonIcon: {\n    padding: '5px 20px'\n  },\n  iconButton: {\n    border: '1px solid rgba(0, 0, 0, 0.12)',\n    padding: '5px',\n    borderRadius: '3px'\n  },\n  buttonHeader: {\n    display: 'flex',\n    gap: '0px 8px',\n    marginLeft: '20px',\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: '0',\n      marginBottom: '16px'\n    },\n  },\n  menuIcon: {\n    fontSize: '28px',\n    marginTop: '1px',\n    [theme.breakpoints.down('sm')]: {\n      marginTop: '8px',\n      marginLeft: '16px'\n    },\n  },\n  userName: {\n    fontSize: '18px',\n    color: \"#262626\",\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '28px',\n    },\n  },\n  nameText: {\n    fontSize: '16px',\n    fontWeight: 600,\n    color: \"#262626\",\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '14px',\n    },\n  },\n  descriptionText: {\n    fontSize: '16px',\n    color: \"#262626\",\n    marginTop: '4px',\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '14px',\n    },\n  },\n  bold: {\n    fontWeight: 600\n  }\n}));\n\nexport default function UserProfile() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const mobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const { appOptions } = useContext(AppContext);\n  const { userProfile } = appOptions;\n  const followers = new Intl.NumberFormat().format(userProfile.followers);\n  const following = new Intl.NumberFormat().format(userProfile.following);\n\n  return (\n    <div id=\"instagram-profile\" className={classes.container}>\n      <div className={classes.imageContainer}>\n        <img className={classes.image} src={process.env.PUBLIC_URL + '/images/placeholder.png'} alt=\"my image\" width={150} height={150} />\n      </div>\n\n      <div className={classes.textContainer}>\n        <div className={classes.header}>\n          <div className={classes.userName}>{userProfile.username}</div> \n          \n          {mobile ? <MoreHorizIcon className={classes.menuIcon}/> : (\n            <div className={classes.buttonHeader}>\n              <div>\n                <Button variant=\"outlined\" disabled className={classes.button}>message</Button>\n              </div>\n              <div>\n                <Button variant=\"outlined\" disabled className={classes.buttonIcon}><PersonIcon className={classes.buttonIcons}/><CheckIcon className={classes.buttonCheckIcon}/></Button>\n              </div>\n              <div>\n                <IconButton disabled className={classes.iconButton}><ArrowDropDownIcon className={classes.buttonIcons}/></IconButton>\n              </div>\n              <MoreHorizIcon className={classes.menuIcon}/>\n            </div>\n          )}\n        </div>\n            \n        {mobile && (\n          <div className={classes.buttonHeader}>\n            <div>\n              <Button variant=\"outlined\" disabled className={classes.button}>message</Button>\n            </div>\n            <div>\n              <Button variant=\"outlined\" disabled className={classes.buttonIcon}><PersonIcon className={classes.buttonIcons}/><CheckIcon className={classes.buttonCheckIcon}/></Button>\n            </div>\n            <div>\n              <IconButton disabled className={classes.iconButton}><ArrowDropDownIcon className={classes.buttonIcons}/></IconButton>\n            </div>\n          </div>\n       )}\n\n        {mobile ? (\n        <div className={classes.metaContainer}>\n          <div><div className={classes.bold}>{appOptions.defaultPosts.length}</div><div>posts</div></div>\n          <div><div className={classes.bold}>{followers}</div><div>followers</div></div>\n          <div><div className={classes.bold}>{following}</div><div>following</div></div>\n        </div>\n\n        ) : (\n          <ul className={classes.metaContainer}>\n            <li><span className={classes.bold}>{appOptions.defaultPosts.length}</span>&nbsp;posts</li>\n            <li><span className={classes.bold}>{followers}</span>&nbsp;followers</li>\n            <li><span className={classes.bold}>{following}</span>&nbsp;following</li>\n          </ul>\n        )}\n\n        <div className={classes.nameText}>{userProfile.name}</div>\n        <div className={classes.descriptionText}>{userProfile.bio}</div>\n      </div>\n    </div>\n  );\n}\n","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/ice-cream.js",[],"/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/flowers4.js",[],"/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/airplane.js",[],"/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/beach-view.js",[],"/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/routine.js",[],"/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/central-park.js",[],"/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/holiday-house.js",[],"/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/green-bubble.js",[],"/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/lake-view.js",[],"/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/wynn.js",[],"/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/stage.js",[],"/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/gucci.js",[],"/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/bridge-bird.js",[],"/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/scenic.js",[],"/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/shoes.js",[],"/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/full-cup.js",[],"/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/smoke.js",[],"/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/view.js",[],"/Users/mymac/Documents/Projects/no-filter/src/components/instagram/GridLayout.tsx",["266","267"],"import React, { useContext } from 'react';\nimport {Link, useLocation} from \"react-router-dom\";\nimport LazyLoad from 'react-lazyload';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { AppContext } from '../../AppContext';\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    gridGap: '16px',\n    margin: '30px auto 40px auto',\n    [theme.breakpoints.down('sm')]: {\n      gridGap: '5px',\n    },\n\n  },\n  imageContainer: {\n    margin: '0 auto',\n    position: 'relative',\n    '&:hover': {\n      filter: 'brightness(80%)',\n   }\n  },\n  multipleIcon: {\n    position: 'absolute',\n    top: '8px',\n    right: '8px'\n  },\n  image: {\n    cursor: 'pointer',\n    width: '293px',\n    height: '293px',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      height: '100%'\n    }\n  },\n  hoverImage: {\n    position: 'absolute',\n    zIndex: 5\n  }\n}));\n\nexport default function GridLayout() {\n  const classes = useStyles();\n  const location = useLocation();\n  const { appOptions } = useContext(AppContext);\n\n  return (\n    <div id=\"gridview-container\" className={classes.gridContainer}>\n      {appOptions.defaultPosts.map((post) => {\n        return (\n          <div \n            className={classes.imageContainer} \n            key={post.id} \n          >\n            {post.photos.length > 1 && (\n              <img \n                className={classes.multipleIcon}\n                src={process.env.PUBLIC_URL + '/icons/instagram-carousel.png'}\n                width={16}\n                height={16}\n              />\n            )}\n            <LazyLoad height={293}>\n              <Link to={{\n                pathname: `/instagram/${post.id}`,\n                state: { modalBackground: location }\n              }}>\n                <img\n                  className={classes.image} \n                  src={process.env.PUBLIC_URL + post.photos[0].squareSrc} \n                />\n              </Link >\n            </LazyLoad>\n          </div>\n        )\n      })}\n    </div>\n  );\n}","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/flowers3.js",[],"/Users/mymac/Documents/Projects/no-filter/src/defaults.ts",[],"/Users/mymac/Documents/Projects/no-filter/src/components/icons/HeartIcon.tsx",[],"/Users/mymac/Documents/Projects/no-filter/src/components/icons/CommentIcon.tsx",[],["268","269"],"/Users/mymac/Documents/Projects/no-filter/src/components/icons/ShareIcon.tsx",[],"/Users/mymac/Documents/Projects/no-filter/src/components/icons/BookmarkIcon.tsx",[],"/Users/mymac/Documents/Projects/no-filter/src/components/instagram/post/IconBar.tsx",[],"/Users/mymac/Documents/Projects/no-filter/src/components/instagram/views/PostsView.tsx",[],"/Users/mymac/Documents/Projects/no-filter/src/components/instagram/views/FeedView.tsx",["270","271"],"import React, { useEffect, useContext, useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport PostCard from '../post/PostCard';\nimport {shufflePosts} from '../../../util/posts';\nimport {Post} from '../../../types';\nimport { AppContext } from '../../../AppContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    paddingTop: '28px',\n    minHeight: '60vh'\n  }\n}));\n\nexport default function FeedView() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const mobile = useMediaQuery(theme.breakpoints.down('md'));\n\n  const { appOptions } = useContext(AppContext);\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  useEffect(()=> {\n    setPosts(shufflePosts(appOptions.defaultPosts));\n  },[])\n\n  const renderPost = posts.map((post,index) => {\n    let aspectRatio = post.photos[0].exifImageWidth / post.photos[0].exifImageHeight;\n    let imageWidth = 614;\n    let imageHeight = imageWidth / aspectRatio;\n\n    return (\n      <PostCard key={post.id+index} post={post} imageWidth={imageWidth} imageHeight={imageHeight}/>\n    )\n  });\n\n  return (\n    <div className={classes.root}>\n      {renderPost}\n    </div>\n  );\n}\n","/Users/mymac/Documents/Projects/no-filter/src/util/posts.ts",[],"/Users/mymac/Documents/Projects/no-filter/src/components/instagram/post/CommentInput.tsx",[],"/Users/mymac/Documents/Projects/no-filter/src/components/instagram/post/PostCard.tsx",["272"],"import React, { useState, useContext } from 'react';\nimport LazyLoad from 'react-lazyload';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport dateFormat from 'dateformat';\n\nimport ImageCarousel from './ImageCarousel';\nimport IconBar from './IconBar';\nimport CommentInput from './CommentInput';\nimport MenuIcon from '../../icons/MenuIcon';\n\nimport { AppContext } from '../../../AppContext';\nimport {Post} from '../../../types';\n\ntype Props = {\n  post: Post,\n  imageWidth: number,\n  imageHeight: number\n}\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    width: '614px',\n    margin: '0 auto 60px',\n    borderRadius: '3px',\n    border: '1px solid rgba(219,219,219,1)',\n    boxShadow: '0 0 0',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      margin: '0 auto 30px',\n    },\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    paddingTop: '28px'\n  },\n  cardHeader: {\n    padding: '10px'\n  },\n  settingsIcon: {\n    marginTop: '18px',\n    marginRight: '10px'\n  },\n  username: {\n    fontSize: '14px',\n    fontWeight: 600,\n    '&:hover': {\n      textDecoration: 'underline',\n      cursor: 'default'\n   },\n  },\n  subHeader: {\n    fontSize: '12px',\n    color: '#262626',\n    fontWeight: 400\n  },\n  content: {\n    paddingTop: '4px'\n  },\n  postText: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginBottom: '4px'\n  },\n  time: {\n    color: '#8e8e8e',\n    fontSize: '10px',\n    textTransform: 'uppercase',\n    letterSpacing: '0.2px'\n  },\n  tag: {\n    color: '#00376B',\n    whiteSpace: 'pre'\n  },\n  likesText: {\n    fontWeight: 600,\n    color: '#262626',\n    fontSize: '14px',\n    marginTop: '4px',\n    marginBottom: '6px'\n  },\n  image: {\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      objectFit: 'contain'\n    },\n  }\n}));\n\nexport default function PostCard(props: Props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const mobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const { appOptions } = useContext(AppContext);\n  const { userProfile } = appOptions;\n  const {post, imageWidth, imageHeight} = props;\n  const likesText = post.likes.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n  return (\n    <Card className={classes.card} key={post.id}>\n      <CardHeader\n        className={classes.cardHeader}\n        avatar={<Avatar aria-label=\"user\" src={process.env.PUBLIC_URL + '/images/placeholder.png'}/>}\n        action={<div className={classes.settingsIcon}><MenuIcon /></div>}\n        title={userProfile.username}\n        titleTypographyProps={{ className: classes.username }}\n        subheader={post.location}\n        subheaderTypographyProps={{ className: classes.subHeader }}\n      />\n\n      {post.photos.length <= 1 ? (\n        <LazyLoad height={imageHeight}>\n          <img\n            className={classes.image}\n            src={process.env.PUBLIC_URL + post.photos[0].src}\n            alt=\"test\"\n            width={mobile ? null : imageWidth}\n            height={mobile ? null : imageHeight}\n          />\n        </LazyLoad>\n      ) : <ImageCarousel post={post} imageHeight={imageHeight} imageWidth={imageWidth} />}\n\n      <CardContent className={classes.content}>\n        <IconBar/>\n        <div className={classes.likesText}>{likesText}&nbsp;likes</div>\n        <div className={classes.postText}>\n          <span className={classes.username}>{userProfile.username}&nbsp;</span>\n          {post.description !== '' && <span>{post.description}&nbsp;</span>}\n          {post.tags.map((tag, index) => (<span className={classes.tag} key={tag+index}>#{tag} </span>))}\n        </div>\n        <span className={classes.time}>{dateFormat(post.postedDate, \"mmmm d, yyyy\")}</span>\n      </CardContent>\n      <Divider/>\n      {!mobile && <CommentInput/>}\n    </Card>\n  );\n}\n","/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/starbucks.js",[],"/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/sunglasses.js",[],"/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/life.js",[],"/Users/mymac/Documents/Projects/no-filter/src/assets/mocks/photos/bridge.js",[],"/Users/mymac/Documents/Projects/no-filter/src/pages/GalleryPage.tsx",["273","274","275","276"],"import React, {useState, useContext, useEffect, useCallback} from 'react';\nimport {Link, useLocation} from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Gallery from 'react-photo-gallery';\nimport LazyLoad from 'react-lazyload';\nimport { gql, useLazyQuery } from '@apollo/client';\n\nimport {AppContext} from '../AppContext';\nimport {shufflePosts} from '../util/posts';\nimport {Post} from '../types';\n\nconst ALL_POSTS_QUERY = gql`\n  query {\n    getPosts{\n      description\n      id\n      likes\n      location\n      tags\n      postedDate\n      photos {\n        id\n        src\n        squareSrc\n        vision\n        alt\n        exifImageWidth\n        exifImageHeight\n      }\n    }\n  }\n`\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '935px',\n    margin: '85px auto 60px auto',\n    minHeight: '80vh',\n    [theme.breakpoints.down('md')]: {\n      width: '90%',\n    },\n    [theme.breakpoints.down('sm')]: {\n      marginTop: '60px',\n      width: '98%',\n    }\n  },\n  image: {\n    cursor: 'pointer',\n    '&:hover': {\n      opacity: '0.8',\n      filter: 'grayscale(100%)',\n      transition: '.1s ease-in-out',\n   },\n  },\n}));\n\nexport default function GalleryPage() {\n  const classes = useStyles();\n  const location = useLocation();\n  const { appOptions, setDefaultPosts, setSortedPhotos } = useContext(AppContext);\n  const [getPosts, { loading, data }] = useLazyQuery(ALL_POSTS_QUERY);\n  const [photos, setPhotos] = useState([])\n\n  useEffect(() => {\n    if (appOptions.defaultPosts.length === 0) {\n      getPosts();\n    } else {\n      parsePhotos(appOptions.defaultPosts);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (data) {\n      setDefaultPosts(data['getPosts']);\n      parsePhotos(data['getPosts']);\n    }\n  }, [data]);\n\n  const parsePhotos = (posts: Post[]) => {\n    let newPosts = shufflePosts(posts);\n    let parsedPhotos = [];\n\n    newPosts.forEach((post) => {\n      post.photos.forEach((photo) => {\n        let newPhoto = {\n          id: photo.id,\n          src: photo.src,\n          width: photo.exifImageWidth,\n          height: photo.exifImageHeight,\n          alt: photo.alt,\n          vision: photo.vision,\n          tags: post.tags\n        }\n        parsedPhotos.push(newPhoto);\n      });\n    });\n\n    setPhotos(parsedPhotos);\n    setSortedPhotos(parsedPhotos);\n  }\n\n  const renderImage = useCallback(\n    ({ index, left, top, key, photo }) => (\n      <div key={photo.id} style={{ margin: '1.5px', height: photo.height, width: photo.width }}>\n        <LazyLoad height={photo.height}>\n          <Link to={{\n            pathname: `/gallery/${photo.id}`,\n            state: { modalBackground: location }\n          }}>\n            <img\n              className={classes.image}\n              alt={photo.alt}\n              {...photo}\n            />\n          </Link>\n        </LazyLoad>\n      </div>\n    ), \n    [],\n  );\n\n  return (\n    <div className={classes.root}>\n      <Gallery photos={photos} renderImage={renderImage} targetRowHeight={350}/>\n    </div>\n  );\n}\n\n","/Users/mymac/Documents/Projects/no-filter/src/pages/InstagramPage.tsx",["277","278","279"],"import React, { useState, useContext, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\n\nimport TabPanel from '../components/common/TabPanel';\nimport UserProfile from '../components/instagram/UserProfile';\nimport PostsView from '../components/instagram/views/PostsView';\nimport FeedView from '../components/instagram/views/FeedView';\nimport GridIcon from '../components/icons/GridIcon';\n\nimport {AppContext} from '../AppContext';\n\nconst ALL_POSTS_QUERY = gql`\n  query {\n    getPosts{\n      description\n      id\n      likes\n      location\n      tags\n      postedDate\n      photos {\n        id\n        src\n        squareSrc\n        vision\n        alt\n        exifImageWidth\n        exifImageHeight\n      }\n    }\n  }\n`\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '935px',\n    margin: '100px auto 30px',\n    [theme.breakpoints.down('md')]: {\n      width: '90%',\n    },\n    [theme.breakpoints.down('sm')]: {\n      marginTop: '60px',\n      width: '98%',\n    }\n  },\n  tabsWrapper: {\n    borderBottom: '1px solid #DBDBDB',\n    flexDirection: 'row',\n    width: '92.75%',\n    margin: '0 auto'\n  },\n  tabContainer: {\n    display: 'flex',\n    fontFamily: '\"-apple-system\", \"system-ui\", \"Segoe UI\", \"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"'\n  },\n  tabFont: {\n    fontWeight: 'bold',\n    fontSize: '12px',\n    letterSpacing: '1px',\n    fontFamily: 'inherit'\n  },\n  indicator: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \"& > span\": {\n      maxWidth: \"70px\",\n      width: \"100%\",\n      backgroundColor: \"#262626\"\n    }\n  },\n  tabIcon: {\n    marginTop: '2px',\n    fontSize: '16px'\n  },\n  sticky: {\n    top: '48px',\n    boxShadow: '0 0 0',\n    backgroundColor: '#FAFAFA',\n    zIndex: 2\n  }\n}));\n\nexport default function InstagramPage() {\n  const classes = useStyles();\n  const { appOptions, setDefaultPosts } = useContext(AppContext);\n  const [value, setValue] = useState(0);\n\n  const [getPosts, { loading, data }] = useLazyQuery(ALL_POSTS_QUERY);\n\n  useEffect(() => {\n    if (appOptions.defaultPosts.length === 0) {\n      getPosts();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (data) {\n      setDefaultPosts(data['getPosts']);\n    }\n  }, [data]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <main className={classes.root}>\n      <div>\n        <UserProfile/>\n        <AppBar\n          position=\"sticky\"\n          color=\"default\"\n          classes={{\n            positionSticky: classes.sticky,\n          }}\n        >\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n            classes={{ root: classes.tabsWrapper, indicator: classes.indicator}}\n            TabIndicatorProps={{ children: <span /> }}\n          >\n            <Tab label={<div className={classes.tabContainer}><div><GridIcon /></div><div className={classes.tabFont}>&nbsp;Posts</div></div>}/>\n            <Tab label={<div className={classes.tabContainer}><PhotoCameraIcon className={classes.tabIcon}/><div className={classes.tabFont}>&nbsp;Feed</div></div>}/>\n          </Tabs>\n        </AppBar>\n        <TabPanel name=\"ig-panel\" value={value} index={0}>\n          <PostsView/>\n        </TabPanel>\n        <TabPanel name=\"ig-panel\" value={value} index={1}>\n          <FeedView/>\n        </TabPanel>\n      </div>\n    </main>\n  )\n}\n","/Users/mymac/Documents/Projects/no-filter/src/pages/GalleryPost.tsx",["280","281","282","283"],"import React, {useRef, useEffect, useContext, useState} from \"react\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {useHistory, useParams} from \"react-router-dom\";\nimport { disableBodyScroll, enableBodyScroll, clearAllBodyScrollLocks } from \"body-scroll-lock\";\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\n\nimport CloseIcon from '../components/icons/CloseIcon';\nimport {AppContext} from '../AppContext';\nimport TabPanel from '../components/common/TabPanel';\nimport LabelsView from '../components/gallery/LabelsView';\nimport ObjectsView from '../components/gallery/ObjectsView';\nimport MobilePhotoView from '../components/gallery/MobilePhotoView';\nimport {Post} from '../types';\nimport {defaultGalleryPhoto} from '../defaults';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'fixed',\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'rgba(0, 0, 0, 0.6)',\n    display: 'flex',\n    justifyContent: 'center',\n    zIndex: 1200\n  },\n  modal: {\n    margin: 'auto 0',\n    position: 'relative',\n    borderTopLeftRadius: '4px',\n    borderBottomLeftRadius: '4px'\n  },\n  close: {\n    position: 'absolute',\n    color: '#fff',\n    top: '20px',\n    right: '20px',\n    cursor: 'pointer'\n  },\n  next: {\n    position: 'absolute',\n    color: '#fff',\n    right: '10%',\n    top: '46%',\n    fontSize: '48px',\n    cursor: 'pointer',\n    [theme.breakpoints.down('xl')]: {\n      right: '12%',\n    },\n    [theme.breakpoints.down('lg')]: {\n      right: '7%',\n    },\n    [theme.breakpoints.down('md')]: {\n      right: '2%',\n    }\n  },\n  previous: {\n    position: 'absolute',\n    color: '#fff',\n    left: '10%',\n    top: '46%',\n    fontSize: '48px',\n    cursor: 'pointer',\n    [theme.breakpoints.down('xl')]: {\n      left: '12%',\n    },\n    [theme.breakpoints.down('lg')]: {\n      left: '7%',\n    },\n    [theme.breakpoints.down('md')]: {\n      left: '2%',\n    }\n  },\n  image: {\n    position: 'absolute',\n    borderTopLeftRadius: '4px',\n    borderBottomLeftRadius: '4px'\n  },\n  canvas: {\n    zIndex: 1500,\n    borderTopLeftRadius: '4px',\n    borderBottomLeftRadius: '4px'\n  },\n  container: {\n    display: 'flex',\n    borderTopLeftRadius: '4px',\n    borderBottomLeftRadius: '4px'\n  },\n  tabContainer: {\n    boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)'\n  },\n  tabDisabled: {\n    '&.Mui-disabled': {\n      opacity: 0.5,\n    },\n  }\n}));\n\nexport default function GalleryPost() {\n  const classes = useStyles();\n  const history = useHistory();\n  let { id } = useParams<{id: string}>();\n  const theme = useTheme();\n  const mobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const { appOptions } = useContext(AppContext);\n  const modalRef = useRef<HTMLDivElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [value, setValue] = useState(0);\n  const [currentPhoto, setCurrentPhoto] = useState(defaultGalleryPhoto);\n  const [photoIndex, setPhotoIndex] = useState(0);\n  const [width, setWidth] = useState(0)\n  const [height, setHeight] = useState(0)\n  const [labels, setLabels] = useState<any[]>([])\n  const [objects, setObjects] = useState<any[]>([])\n\n  useEffect(() => {\n    if (appOptions.sortedPhotos.length > 0) {\n      let index = appOptions.sortedPhotos.findIndex( photo => photo.id === id);\n      let photo = appOptions.sortedPhotos[index];\n     \n      parseVisionAPI(photo);\n      calculateImageSize(photo);\n      setCurrentPhoto(photo);\n      setPhotoIndex(index);\n      disableBodyScroll(modalRef.current);\n    } else {\n      history.push(\"/\")\n    }\n  }, []);\n\n  useEffect(() => {\n    if (mobile) {\n      clearAllBodyScrollLocks();\n    }\n  }, [mobile]);\n\n  const handleChange = (event, newValue) => {\n    if (newValue === 1) {\n      drawBoundingBoxes();\n    } else {\n      clearCanvas();\n    }\n    setValue(newValue);\n  };\n\n  const parseVisionAPI = (photo) => {\n    let visionAPI = JSON.parse(photo.vision);\n    let objects: any[] = [];\n    let labels = visionAPI['labelAnnotations'].filter( label => photo.tags.includes(label['description'].toLowerCase().split(' ').join('')));\n    let uniqueLabels = Array.from(new Set(labels.map(a => a.description)))\n      .map(id => { return labels.find(a => a.description === id)});\n\n    if (visionAPI.hasOwnProperty('localizedObjectAnnotations')) {\n      objects = [...objects, ...visionAPI['localizedObjectAnnotations']]\n    }\n    // if (visionAPI.hasOwnProperty('landmarkAnnotations')) {\n    //   objects = [...objects, ...visionAPI['landmarkAnnotations']]\n    // }\n    // if (visionAPI.hasOwnProperty('logoAnnotations')) {\n    //   objects = [...objects, ...visionAPI['logoAnnotations']]\n    // }\n    console.log('visionAPI', visionAPI);\n    console.log('labels', labels);\n    console.log('objects', objects);\n    console.log('update', uniqueLabels)\n    setLabels(uniqueLabels);\n    setObjects(objects)\n  }\n\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n  }\n\n  const calculateImageSize = (photo) => {\n    let height: number = 550;\n    let width: number;\n    let aspectRatio = photo.width / photo.height;\n    if (aspectRatio < 1) {\n      // 3:4 image\n    } else if (aspectRatio > 1.5) {\n      // 16:9 image\n      height = 400;\n    } else if (aspectRatio > 1 && aspectRatio <= 1.5) {\n      // 4:3 image\n      height = 500;\n    }\n\n    width = height * aspectRatio;\n\n    setWidth(width);\n    setHeight(height);\n  }\n\n  const close = (e) => {\n    e.stopPropagation();\n    enableBodyScroll(modalRef.current);\n    history.goBack();\n  };\n\n  const nextPost = (e) => {\n    e.stopPropagation();\n    let index = photoIndex + 1;\n    let photo = appOptions.sortedPhotos[index];\n\n    clearCanvas();\n    setValue(0);\n    calculateImageSize(photo);\n    parseVisionAPI(photo);\n    setCurrentPhoto(photo);\n    setPhotoIndex(index);\n  }\n\n  const prevPost = (e) => {\n    e.stopPropagation();\n    let index = photoIndex - 1;\n    let photo = appOptions.sortedPhotos[index];\n\n    clearCanvas();\n    setValue(0);\n    calculateImageSize(photo);\n    parseVisionAPI(photo);\n    setCurrentPhoto(photo);\n    setPhotoIndex(index);\n  }\n\n  const drawBoundingBoxes = () => {\n    if (objects.length) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n\n      objects.forEach((object, index) => {\n        let coordsArr = object['boundingPoly']['normalizedVertices']\n        const xArr = coordsArr.map(c => c.x);\n        const yArr = coordsArr.map(c => c.y);\n    \n        let l = Math.min(...xArr) * width;\n        let r = Math.max(...xArr) * width;\n        let b = Math.min(...yArr) * height;\n        let t = Math.max(...yArr) * height;\n    \n        const boxWidth  = r - l;\n        const boxHeight = t - b;\n\n        context.lineWidth = 3;\n        context.strokeStyle = \"#43a047\";\n        context.strokeRect(l, b, boxWidth, boxHeight);\n      });\n    }\n  }\n\n  if (mobile) return <MobilePhotoView photo={currentPhoto}/>\n\n  return (\n    <div aria-label=\"modal-backdrop\" className={classes.root} ref={modalRef} onClick={close}>\n      {photoIndex > 0 && <ChevronLeftIcon className={classes.previous} onClick={prevPost}/>}\n      {photoIndex < appOptions.sortedPhotos.length -1 && <ChevronRightIcon className={classes.next} onClick={nextPost}/>}\n      <div aria-label=\"modal\" onClick={(e) => e.stopPropagation()} className={classes.modal}>\n\n        <Paper elevation={3}>\n          <div className={classes.container}>\n            <img\n              className={classes.image}\n              src={process.env.PUBLIC_URL + currentPhoto.src} \n              width={width} \n              height={height}  \n            />\n            <canvas\n              className={classes.canvas}\n              ref={canvasRef}\n              width={width}\n              height={height}\n            />\n            <div>\n              <div className={classes.tabContainer}>\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  centered\n                >\n                  <Tab label=\"Labels\" />\n                  <Tab className={classes.tabDisabled}label=\"Objects\" disabled={objects.length ? false : true}/>\n                </Tabs>\n              </div>\n            \n              <TabPanel name=\"vision-panel\" value={value} index={0}>\n                <LabelsView labels={labels}/>\n              </TabPanel>\n              <TabPanel name=\"vision-panel\" value={value} index={1}>\n                <ObjectsView objects={objects}/>\n              </TabPanel>\n            </div>\n          </div>\n        </Paper>\n      </div>    \n     </div>\n  );\n}\n","/Users/mymac/Documents/Projects/no-filter/src/pages/InstagramPost.tsx",["284","285","286"],"import React, {useRef, useEffect, useContext, useState} from \"react\";\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {useHistory, useParams} from \"react-router-dom\";\nimport { disableBodyScroll, enableBodyScroll, clearAllBodyScrollLocks } from \"body-scroll-lock\";\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nimport MobilePostView from '../components/instagram/views/MobilePostView';\nimport ModalPostCard from '../components/instagram/post/ModalPostCard';\nimport CloseIcon from '../components/icons/CloseIcon';\nimport {AppContext} from '../AppContext';\nimport {Post} from '../types';\nimport {defaultPost} from '../defaults';\n\nconst ALL_POSTS_QUERY = gql`\n  query {\n    getPosts{\n      description\n      id\n      likes\n      location\n      tags\n      postedDate\n      photos {\n        id\n        src\n        squareSrc\n        vision\n        alt\n        exifImageWidth\n        exifImageHeight\n      }\n    }\n  }\n`\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'fixed',\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    display: 'flex',\n    justifyContent: 'center',\n    zIndex: 1200\n  },\n  modal: {\n    margin: 'auto 0'\n  },\n  close: {\n    position: 'absolute',\n    color: '#fafafa',\n    top: '20px',\n    right: '20px',\n    cursor: 'pointer'\n  },\n  next: {\n    position: 'absolute',\n    color: '#fafafa',\n    right: '10%',\n    top: '48.5%',\n    fontSize: '48px',\n    cursor: 'pointer',\n    [theme.breakpoints.down('xl')]: {\n      right: '12%',\n    },\n    [theme.breakpoints.down('lg')]: {\n      right: '7%',\n    },\n    [theme.breakpoints.down('md')]: {\n      right: '2%',\n    }\n  },\n  previous: {\n    position: 'absolute',\n    color: '#fafafa',\n    left: '10%',\n    top: '48.5%',\n    fontSize: '48px',\n    cursor: 'pointer',\n    [theme.breakpoints.down('xl')]: {\n      left: '12%',\n    },\n    [theme.breakpoints.down('lg')]: {\n      left: '7%',\n    },\n    [theme.breakpoints.down('md')]: {\n      left: '2%',\n    }\n  }\n}));\n\nexport default function InstagramModalPost() {\n  const classes = useStyles();\n  const history = useHistory();\n  let { id } = useParams<{id: string}>();\n\n  const theme = useTheme();\n  const mobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const modalRef = useRef<HTMLDivElement>(null);\n  const { appOptions, setDefaultPosts } = useContext(AppContext);\n  const [getPosts, { loading, data }] = useLazyQuery(ALL_POSTS_QUERY);\n\n  const [currentPost, setCurrentPost] = useState<Post>(defaultPost);\n  const [postIndex, setPostIndex] = useState(0);\n  const medium = useMediaQuery('(min-width:1400px)');\n\n\n  useEffect(() => {\n    if (appOptions.defaultPosts.length > 0) {\n      setCurrentPost(appOptions.defaultPosts.find(post => post.id === id));\n      setPostIndex(appOptions.defaultPosts.findIndex(post => post.id === id));\n      disableBodyScroll(modalRef.current);\n    } else {\n      getPosts();\n    }\n    console.log('medium', medium)\n  }, []);\n\n  useEffect(() => {\n    if (data) {\n      let index = data['getPosts'].findIndex(post => post.id === id);\n      let post = data['getPosts'][index];\n\n      setCurrentPost(post);\n      setPostIndex(index);\n      disableBodyScroll(modalRef.current);\n      setDefaultPosts(data['getPosts']);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (mobile) {\n      clearAllBodyScrollLocks();\n    }\n  }, [mobile]);\n\n  const close = (e) => {\n    e.stopPropagation();\n    enableBodyScroll(modalRef.current);\n    history.goBack();\n  };\n\n  const nextPost = (e) => {\n    e.stopPropagation();\n    let index = postIndex + 1;\n    setCurrentPost(appOptions.defaultPosts[index]);\n    setPostIndex(index);\n  }\n\n  const prevPost = (e) => {\n    e.stopPropagation();\n    let index = postIndex - 1;\n    setCurrentPost(appOptions.defaultPosts[index]);\n    setPostIndex(index);\n  }\n\n  if (mobile) return <MobilePostView post={currentPost}/>\n\n  return (\n    <div aria-label=\"modal-backdrop\" className={classes.root} ref={modalRef} onClick={close}>\n      <div className={classes.close} onClick={close}>\n        <CloseIcon  />\n      </div>\n      {postIndex > 0 && <ChevronLeftIcon className={classes.previous} onClick={prevPost}/>}\n      {postIndex < appOptions.defaultPosts.length -1 && <ChevronRightIcon className={classes.next} onClick={nextPost}/>}\n      <div aria-label=\"modal\" onClick={(e) => e.stopPropagation()} className={classes.modal}>    \n        <ModalPostCard post={currentPost}/>\n      </div>    \n    </div>\n  );\n}\n","/Users/mymac/Documents/Projects/no-filter/src/components/common/ScrollTop.tsx",["287","288","289","290","291","292","293","294"],"import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Fab from '@material-ui/core/Fab';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Zoom from '@material-ui/core/Zoom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\n\nexport default function ScrollTop(props) {\n  const { children } = props;\n  const classes = useStyles();\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 100,\n  });\n\n  const handleClick = (event) => {\n    console.log('event.target', event.target)\n    const anchor = document.querySelector('#back-to-top-anchor');\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\n",["295","296"],"/Users/mymac/Documents/Projects/no-filter/src/components/instagram/post/ImageCarousel.tsx",[],"/Users/mymac/Documents/Projects/no-filter/src/components/icons/MenuIcon.tsx",[],"/Users/mymac/Documents/Projects/no-filter/src/components/icons/GridIcon.tsx",[],"/Users/mymac/Documents/Projects/no-filter/src/components/instagram/post/ModalPostCard.tsx",["297","298"],"import React, { useState, useContext } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport dateFormat from 'dateformat';\n\nimport ImageCarousel from './ImageCarousel';\nimport IconBar from './IconBar';\nimport CommentInput from './CommentInput';\nimport MenuIcon from '../../icons/MenuIcon';\n\nimport { AppContext } from '../../../AppContext';\nimport {Post} from '../../../types';\n\ntype Props = {\n  post: Post\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative'\n  },\n  card: {\n    width: '300px',\n    margin: '0',\n    borderRadius: 0,\n  },\n  container: {\n    display: 'flex',\n  },\n  cardHeader: {\n    padding: '10px'\n  },\n  settingsIcon: {\n    marginTop: '18px',\n    marginRight: '10px'\n  },\n  postTitle: {\n    fontSize: '14px',\n    fontWeight: 600\n  },\n  subHeader: {\n    fontSize: '12px',\n    color: '#262626',\n    fontWeight: 400\n  },\n  username: {\n    fontSize: '14px',\n    fontWeight: 600,\n    '&:hover': {\n      textDecoration: 'underline',\n      cursor: 'default'\n   },\n  },\n  content: {\n    padding: '16px 0 0 0',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    height: '94%'\n  },\n  postTextContainer: {\n    display: 'flex',\n    paddingLeft: '10px'\n  },\n  postText: {\n    display: 'inline-block',\n    wordBreak: 'break-word',\n    padding: '0 16px'\n  },\n  time: {\n    color: '#8e8e8e',\n    fontSize: '10px',\n    textTransform: 'uppercase',\n    letterSpacing: '0.2px',\n    padding: '8px 16px'\n  },\n  divider: {\n    marginBottom: '12px',\n    backgroundColor: 'rgba(239, 239, 239, 1)',\n  },\n  iconBarContainer: {\n    padding: '0 16px'\n  },\n  carousel: {\n    width: '450px'\n  },\n  tag: {\n    color: '#00376B'\n  },\n  likesText: {\n    fontWeight: 600,\n    color: '#262626',\n    fontSize: '14px',\n    margin: '4px 0 4px 16px',\n  }\n}));\n\nexport default function ModalPostCard(props: Props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { appOptions } = useContext(AppContext);\n  const { userProfile } = appOptions;\n  const {post} = props;\n  const likesText = post.likes.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  const min = useMediaQuery(theme.breakpoints.up('sm'));\n  const max = useMediaQuery('(max-width:1400px)');\n\n\n  let height: number = 600;\n  let width: number;\n  let aspectRatio: number\n  \n  if (post.id) {\n    aspectRatio = post.photos[0].exifImageWidth / post.photos[0].exifImageHeight;\n\n    if (aspectRatio < 1) {\n      // 3:4 image\n    } else if (aspectRatio > 1.5) {\n      // 16:9 image\n      height = 400;\n    } else if (aspectRatio > 1 && aspectRatio <= 1.5) {\n      // 4:3 image\n      height = 550;\n    }\n\n    if (min && max) {\n      if (aspectRatio < 1) {\n        // 3:4 image\n        height = 500\n      } else if (aspectRatio > 1.5) {\n        // 16:9 image\n        height = 300;\n      } else if (aspectRatio > 1 && aspectRatio <= 1.5) {\n        // 4:3 image\n        height = 450;\n      }\n    }\n\n    width = height * aspectRatio;\n  } else return null\n\n  return (\n    <div className={classes.container}>\n      {post.photos.length <= 1 ? (\n        <img\n          src={process.env.PUBLIC_URL + post.photos[0].src}\n          alt={post.photos[0].alt}\n          width={width}\n          height={height}\n        />\n      ) : <div className={classes.carousel}><ImageCarousel post={post} imageHeight={height} imageWidth={width} /></div>}\n\n      <Card className={classes.card} style={{ height: `${height}`}}>\n      <CardHeader\n        className={classes.cardHeader}\n        avatar={<Avatar aria-label=\"user\" src={process.env.PUBLIC_URL + '/images/placeholder.png'}/>}\n        action={<div className={classes.settingsIcon}><MenuIcon /></div>}\n        title={userProfile.username + \" • \" + \"Following\"}\n        titleTypographyProps={{ className: classes.username }}\n        subheader={post.location}\n        subheaderTypographyProps={{ className: classes.subHeader }}\n      />\n      <Divider/>\n      <CardContent className={classes.content}>\n        <div className={classes.postTextContainer}>\n          <Avatar aria-label=\"user\" src={process.env.PUBLIC_URL + '/images/placeholder.png'}/>\n          <div className={classes.postText}>\n            <span className={classes.username}>{userProfile.username}&nbsp;</span>\n            {post.description !== '' && <span>{post.description}&nbsp;</span>}\n            {post.tags.map((tag, index) => (<span className={classes.tag} key={tag+index}>#{tag} </span>))}\n          </div>\n\n        </div>\n\n        <div>\n          <Divider className={classes.divider}/>\n          <div className={classes.iconBarContainer}>\n            <IconBar/>\n          </div>\n          <div className={classes.likesText}>{likesText}&nbsp;likes</div>\n          <div className={classes.time}>{dateFormat(post.postedDate, \"mmmm d, yyyy\")}</div>\n          <Divider/>\n          <CommentInput/>\n        </div>\n      </CardContent>\n\n      </Card>\n    </div>\n  );\n}\n","/Users/mymac/Documents/Projects/no-filter/src/components/icons/CloseIcon.tsx",[],"/Users/mymac/Documents/Projects/no-filter/src/components/gallery/LabelsView.tsx",["299"],"import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\ntype Props = {\n  labels: any[]\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: '16px',\n    [theme.breakpoints.down('sm')]: {\n      paddingBottom: '24px',\n    },\n  },\n  labelContainer: {\n    padding: '8px 16px',\n    [theme.breakpoints.down('sm')]: {\n      padding: '8px 28px',\n    },\n  },\n  textContainer: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n}));\n\nexport default function LabelsView(props: Props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const mobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return (\n    <div className={classes.root}>\n      {props.labels.length && props.labels.map(label => (\n        <div className={classes.labelContainer} key={label['mid']}>\n          <div className={classes.textContainer}>\n            <div>{label['description']}</div>\n            <div>{(label['score'] * 100).toFixed(2)}%</div>\n          </div>\n          <LinearProgress color=\"primary\" variant=\"determinate\"  value={label['score'] * 100}/>\n        </div>\n      ))}\n    </div>  \n  );\n}\n","/Users/mymac/Documents/Projects/no-filter/src/components/gallery/ObjectsView.tsx",[],"/Users/mymac/Documents/Projects/no-filter/src/components/common/MobileBottomNav.tsx",[],"/Users/mymac/Documents/Projects/no-filter/src/components/instagram/views/MobilePostView.tsx",[],"/Users/mymac/Documents/Projects/no-filter/src/components/gallery/MobilePhotoView.tsx",["300","301","302","303"],"import React, { useContext, useState, useRef, useEffect } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {useHistory} from \"react-router-dom\";\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport TabPanel from '../common/TabPanel';\nimport LabelsView from '../gallery/LabelsView';\nimport ObjectsView from '../gallery/ObjectsView';\n\ntype Props = {\n  photo: any\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: '30px'\n  },\n  backIcon: {\n    margin: '55px 0px 6px 16px'\n  },\n  container: {\n    paddingTop: '30px'\n  },\n  image: {\n    display: 'flex',\n    margin: '0 auto'\n  },\n  tabContainer: {\n    boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)'\n  },\n  tabDisabled: {\n    '&.Mui-disabled': {\n      opacity: 0.5,\n    },\n  }\n}));\n\nexport default function MobilePhotoView(props: Props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const theme = useTheme();\n  const mobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const [width, setWidth] = useState(0)\n  const [height, setHeight] = useState(0)\n  const [labels, setLabels] = useState<any[]>([]);\n  const [objects, setObjects] = useState<any[]>([]);\n  const [value, setValue] = useState(0);\n\n  useEffect(() => {\n    if(props.photo.id) {\n      parseVisionAPI(props.photo);\n      calculateImageSize(props.photo);\n    }\n  }, []);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const parseVisionAPI = (photo) => {\n    let visionAPI = JSON.parse(photo.vision);\n    let objects: any[] = [];\n    let labels = visionAPI['labelAnnotations'].filter( label => photo.tags.includes(label['description'].toLowerCase().split(' ').join('')));\n    let uniqueLabels = Array.from(new Set(labels.map(a => a.description)))\n      .map(id => { return labels.find(a => a.description === id)});\n\n    if (visionAPI.hasOwnProperty('localizedObjectAnnotations')) {\n      objects = [...objects, ...visionAPI['localizedObjectAnnotations']]\n    }\n    // if (visionAPI.hasOwnProperty('landmarkAnnotations')) {\n    //   objects = [...objects, ...visionAPI['landmarkAnnotations']]\n    // }\n    // if (visionAPI.hasOwnProperty('logoAnnotations')) {\n    //   objects = [...objects, ...visionAPI['logoAnnotations']]\n    // }\n\n    setLabels(uniqueLabels);\n    setObjects(objects)\n  }\n\n  const calculateImageSize = (photo) => {\n    let width: number;\n\n    if (mobile) {\n      width = 400\n    } else {\n      width = 600\n    }\n    \n    let aspectRatio = photo.width / photo.height;\n    let height: number = width / aspectRatio\n    setWidth(width);\n    setHeight(height);\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.backIcon} onClick={() => history.goBack()}>\n        <ArrowBackIcon />\n      </div>\n      <div>\n      <Paper elevation={3}>\n          <div className={classes.container}>\n            <img\n              className={classes.image}\n              src={process.env.PUBLIC_URL + props.photo.src} \n              width={width} \n              height={height}  \n            />\n            <div>\n              <div className={classes.tabContainer}>\n                <Tabs\n                  value={value}\n                  onChange={handleChange}\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  centered\n                >\n                  <Tab label=\"Labels\" />\n                  <Tab className={classes.tabDisabled} label=\"Objects\" disabled={true}/>\n                </Tabs>\n              </div>\n            \n              <TabPanel name=\"vision-panel\" value={value} index={0}>\n                <LabelsView labels={labels}/>\n              </TabPanel>\n              <TabPanel name=\"vision-panel\" value={value} index={1}>\n                <ObjectsView objects={objects}/>\n              </TabPanel>\n            </div>\n          </div>\n        </Paper>\n      </div>\n    </div>\n  );\n}\n",{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","severity":1,"message":"309","line":5,"column":8,"nodeType":"310","messageId":"311","endLine":5,"endColumn":11},{"ruleId":"308","severity":1,"message":"312","line":6,"column":8,"nodeType":"310","messageId":"311","endLine":6,"endColumn":27},{"ruleId":"308","severity":1,"message":"313","line":13,"column":8,"nodeType":"310","messageId":"311","endLine":13,"endColumn":17},{"ruleId":"314","severity":1,"message":"315","line":113,"column":17,"nodeType":"316","endLine":116,"endColumn":18},{"ruleId":"304","replacedBy":"317"},{"ruleId":"306","replacedBy":"318"},{"ruleId":"319","severity":1,"message":"320","line":139,"column":9,"nodeType":"316","endLine":139,"endColumn":139},{"ruleId":"321","severity":1,"message":"322","line":60,"column":15,"nodeType":"316","endLine":65,"endColumn":17},{"ruleId":"321","severity":1,"message":"322","line":72,"column":17,"nodeType":"316","endLine":75,"endColumn":19},{"ruleId":"304","replacedBy":"323"},{"ruleId":"306","replacedBy":"324"},{"ruleId":"308","severity":1,"message":"325","line":22,"column":9,"nodeType":"310","messageId":"311","endLine":22,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":29,"column":5,"nodeType":"328","endLine":29,"endColumn":7,"suggestions":"329"},{"ruleId":"308","severity":1,"message":"330","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":25},{"ruleId":"308","severity":1,"message":"331","line":61,"column":22,"nodeType":"310","messageId":"311","endLine":61,"endColumn":29},{"ruleId":"326","severity":1,"message":"332","line":70,"column":6,"nodeType":"328","endLine":70,"endColumn":8,"suggestions":"333"},{"ruleId":"326","severity":1,"message":"334","line":77,"column":6,"nodeType":"328","endLine":77,"endColumn":12,"suggestions":"335"},{"ruleId":"326","severity":1,"message":"336","line":119,"column":5,"nodeType":"328","endLine":119,"endColumn":7,"suggestions":"337"},{"ruleId":"308","severity":1,"message":"331","line":94,"column":22,"nodeType":"310","messageId":"311","endLine":94,"endColumn":29},{"ruleId":"326","severity":1,"message":"338","line":100,"column":6,"nodeType":"328","endLine":100,"endColumn":8,"suggestions":"339"},{"ruleId":"326","severity":1,"message":"340","line":106,"column":6,"nodeType":"328","endLine":106,"endColumn":12,"suggestions":"341"},{"ruleId":"308","severity":1,"message":"342","line":13,"column":8,"nodeType":"310","messageId":"311","endLine":13,"endColumn":17},{"ruleId":"308","severity":1,"message":"343","line":19,"column":9,"nodeType":"310","messageId":"311","endLine":19,"endColumn":13},{"ruleId":"326","severity":1,"message":"344","line":138,"column":6,"nodeType":"328","endLine":138,"endColumn":8,"suggestions":"345"},{"ruleId":"321","severity":1,"message":"322","line":272,"column":13,"nodeType":"316","endLine":277,"endColumn":15},{"ruleId":"308","severity":1,"message":"331","line":107,"column":22,"nodeType":"310","messageId":"311","endLine":107,"endColumn":29},{"ruleId":"326","severity":1,"message":"346","line":123,"column":6,"nodeType":"328","endLine":123,"endColumn":8,"suggestions":"347"},{"ruleId":"326","severity":1,"message":"348","line":135,"column":6,"nodeType":"328","endLine":135,"endColumn":12,"suggestions":"349"},{"ruleId":"308","severity":1,"message":"350","line":2,"column":8,"nodeType":"310","messageId":"311","endLine":2,"endColumn":14},{"ruleId":"308","severity":1,"message":"351","line":3,"column":8,"nodeType":"310","messageId":"311","endLine":3,"endColumn":15},{"ruleId":"308","severity":1,"message":"352","line":4,"column":8,"nodeType":"310","messageId":"311","endLine":4,"endColumn":18},{"ruleId":"308","severity":1,"message":"353","line":6,"column":8,"nodeType":"310","messageId":"311","endLine":6,"endColumn":19},{"ruleId":"308","severity":1,"message":"354","line":8,"column":8,"nodeType":"310","messageId":"311","endLine":8,"endColumn":11},{"ruleId":"308","severity":1,"message":"355","line":9,"column":8,"nodeType":"310","messageId":"311","endLine":9,"endColumn":17},{"ruleId":"308","severity":1,"message":"309","line":10,"column":8,"nodeType":"310","messageId":"311","endLine":10,"endColumn":11},{"ruleId":"308","severity":1,"message":"312","line":11,"column":8,"nodeType":"310","messageId":"311","endLine":11,"endColumn":27},{"ruleId":"304","replacedBy":"356"},{"ruleId":"306","replacedBy":"357"},{"ruleId":"308","severity":1,"message":"330","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":25},{"ruleId":"358","severity":1,"message":"359","line":163,"column":45,"nodeType":"360","messageId":"361","endLine":163,"endColumn":46},{"ruleId":"308","severity":1,"message":"325","line":32,"column":9,"nodeType":"310","messageId":"311","endLine":32,"endColumn":15},{"ruleId":"308","severity":1,"message":"362","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":27},{"ruleId":"308","severity":1,"message":"363","line":1,"column":39,"nodeType":"310","messageId":"311","endLine":1,"endColumn":45},{"ruleId":"326","severity":1,"message":"364","line":60,"column":6,"nodeType":"328","endLine":60,"endColumn":8,"suggestions":"365"},{"ruleId":"321","severity":1,"message":"322","line":110,"column":13,"nodeType":"316","endLine":115,"endColumn":15},"no-native-reassign",["366"],"no-negated-in-lhs",["367"],"@typescript-eslint/no-unused-vars","'Fab' is defined but never used.","Identifier","unusedVar","'KeyboardArrowUpIcon' is defined but never used.","'ScrollTop' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",["366"],["367"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["366"],["367"],"'mobile' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'appOptions.defaultPosts'. Either include it or remove the dependency array.","ArrayExpression",["368"],"'useState' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'appOptions.defaultPosts', 'getPosts', and 'parsePhotos'. Either include them or remove the dependency array.",["369"],"React Hook useEffect has missing dependencies: 'parsePhotos' and 'setDefaultPosts'. Either include them or remove the dependency array.",["370"],"React Hook useCallback has missing dependencies: 'classes.image' and 'location'. Either include them or remove the dependency array.",["371"],"React Hook useEffect has missing dependencies: 'appOptions.defaultPosts.length' and 'getPosts'. Either include them or remove the dependency array.",["372"],"React Hook useEffect has a missing dependency: 'setDefaultPosts'. Either include it or remove the dependency array.",["373"],"'CloseIcon' is defined but never used.","'Post' is defined but never used.","React Hook useEffect has missing dependencies: 'appOptions.sortedPhotos', 'history', and 'id'. Either include them or remove the dependency array.",["374"],"React Hook useEffect has missing dependencies: 'appOptions.defaultPosts', 'getPosts', 'id', and 'medium'. Either include them or remove the dependency array.",["375"],"React Hook useEffect has missing dependencies: 'id' and 'setDefaultPosts'. Either include them or remove the dependency array.",["376"],"'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'CssBaseline' is defined but never used.","'Box' is defined but never used.","'Container' is defined but never used.",["366"],["367"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useContext' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'calculateImageSize' and 'props.photo'. Either include them or remove the dependency array.",["377"],"no-global-assign","no-unsafe-negation",{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},"Update the dependencies array to be: [appOptions.defaultPosts]",{"range":"398","text":"399"},"Update the dependencies array to be: [appOptions.defaultPosts, getPosts, parsePhotos]",{"range":"400","text":"401"},"Update the dependencies array to be: [data, parsePhotos, setDefaultPosts]",{"range":"402","text":"403"},"Update the dependencies array to be: [classes.image, location]",{"range":"404","text":"405"},"Update the dependencies array to be: [appOptions.defaultPosts.length, getPosts]",{"range":"406","text":"407"},"Update the dependencies array to be: [data, setDefaultPosts]",{"range":"408","text":"409"},"Update the dependencies array to be: [appOptions.sortedPhotos, history, id]",{"range":"410","text":"411"},"Update the dependencies array to be: [appOptions.defaultPosts, getPosts, id, medium]",{"range":"412","text":"413"},"Update the dependencies array to be: [data, id, setDefaultPosts]",{"range":"414","text":"415"},"Update the dependencies array to be: [calculateImageSize, props.photo]",{"range":"416","text":"417"},[864,866],"[appOptions.defaultPosts]",[1628,1630],"[appOptions.defaultPosts, getPosts, parsePhotos]",[1759,1765],"[data, parsePhotos, setDefaultPosts]",[2864,2866],"[classes.image, location]",[2379,2381],"[appOptions.defaultPosts.length, getPosts]",[2473,2479],"[data, setDefaultPosts]",[3880,3882],"[appOptions.sortedPhotos, history, id]",[3168,3170],"[appOptions.defaultPosts, getPosts, id, medium]",[3473,3479],"[data, id, setDefaultPosts]",[1627,1629],"[calculateImageSize, props.photo]"]